
/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

package com.project.organ_vlasti.wsdl.file;

import com.project.organ_vlasti.model.util.file.ObjectFactory;
import com.project.organ_vlasti.model.util.file.Tpath;
import com.project.organ_vlasti.service.IzvestajiService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.io.File;
import java.nio.file.Files;
import java.nio.file.Path;
import java.util.logging.Logger;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;

/**
 * This class was generated by Apache CXF 3.2.1
 * 2021-02-06T13:49:12.478+01:00
 * Generated source version: 3.2.1
 * 
 */

@WebService(
                      serviceName = "FileService",
                      portName = "FileServiceSoapBinding",
                      targetNamespace = "http://file",
                      wsdlLocation = "classpath:wsdl/File.wsdl",
                      endpointInterface = "com.project.organ_vlasti.wsdl.file.FileServicePortType")
@Service
public class FileServiceSoapBindingImpl implements FileServicePortType {

    @Autowired
    IzvestajiService izvestajiService;
    private static final Logger LOG = Logger.getLogger(FileServiceSoapBindingImpl.class.getName());

    /* (non-Javadoc)
     * @see file.FileServicePortType#sendRdfFile(java.lang.String id)*
     */
    public Tpath sendRdfFile(String id) {
        LOG.info("Executing operation sendRdfFile");
        System.out.println(id);
        try {
            ObjectFactory of = new ObjectFactory();
            Tpath _return = of.createTpath();

            String path = izvestajiService.generateRdf(id);

            File fileRdf = new File(path);
            Path rdfPath = fileRdf.toPath();
            byte[] rdfBytes = Files.readAllBytes(rdfPath);

            _return.setBytes(rdfBytes);
            return _return;
        } catch (Exception ex) {
            ObjectFactory of = new ObjectFactory();
            Tpath _return = of.createTpath();
            _return.setBytes(null);
            return _return;
        }
    }

    /* (non-Javadoc)
     * @see file.FileServicePortType#sendJsonFile(java.lang.String id)*
     */
    public Tpath sendJsonFile(String id) {
        LOG.info("Executing operation sendJsonFile");
        System.out.println(id);
        try {
            ObjectFactory of = new ObjectFactory();
            Tpath _return = of.createTpath();

            String path = izvestajiService.generateJson(id);

            File fileJson = new File(path);
            Path jsonPath = fileJson.toPath();
            byte[] jsonBytes = Files.readAllBytes(jsonPath);

            _return.setBytes(jsonBytes);
            return _return;
        } catch (Exception ex) {
            ObjectFactory of = new ObjectFactory();
            Tpath _return = of.createTpath();
            _return.setBytes(null);
            return _return;
        }
    }

}
