
/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

package com.project.organ_vlasti.wsdl.izvestaj;

import com.project.organ_vlasti.model.izvestaji.Izvestaj;
import com.project.organ_vlasti.model.izvestaji.ObjectFactory;
import com.project.organ_vlasti.model.izvestaji.Tbody;
import com.project.organ_vlasti.model.util.lists.IzvestajList;
import com.project.organ_vlasti.model.util.parametars.ParametarMap;
import com.project.organ_vlasti.model.util.parametars.RefIdList;
import com.project.organ_vlasti.service.IzvestajiService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.logging.Logger;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;

/**
 * This class was generated by Apache CXF 3.2.1
 * 2021-02-03T22:42:03.977+01:00
 * Generated source version: 3.2.1
 * 
 */

@WebService(
                      serviceName = "IzvestajService",
                      portName = "IzvestajServiceSoapBinding",
                      targetNamespace = "http://izvestaji",
                      wsdlLocation = "classpath:wsdl/Izvestaj.wsdl",
                      endpointInterface = "com.project.organ_vlasti.wsdl.izvestaj.IzvestajServicePortType")
@Service
public class IzvestajServiceSoapBindingImpl implements IzvestajServicePortType {

    @Autowired
    IzvestajiService izvestajiService;

    private static final Logger LOG = Logger.getLogger(IzvestajServiceSoapBindingImpl.class.getName());

    /* (non-Javadoc)
     * @see izvestaji.IzvestajServicePortType#getIzvestajById(java.lang.String id)*
     */
    public Tbody getIzvestajById(String id) {
        LOG.info("Executing operation getIzvestajById");
        try {
            Tbody _return = izvestajiService.getOne(id).getIzvestajBody();
            return _return;
        } catch (Exception ex) {
            ObjectFactory objectFactory = new ObjectFactory();
            Tbody tbody = objectFactory.createTbody();
            tbody.setId("-1");
            return tbody;
        }
    }

    /* (non-Javadoc)
     * @see izvestaji.IzvestajServicePortType#getRefs(parametars.ParametarMap parametars)*
     */
    public RefIdList getRefs(ParametarMap parametars) {
        LOG.info("Executing operation getRefs");
        try {
            RefIdList refIdList = new RefIdList();

            IzvestajList izvestajList = izvestajiService.searchMetadata(
                    parametars.getValue().get(0).getName().equals("datumAfter") ? parametars.getValue().get(0).getValue() : "",
                    parametars.getValue().get(1).getName().equals("datumBefore") ? parametars.getValue().get(1).getValue() : "");


            for (Izvestaj izvestaj: izvestajList.getIzvestajList()) {
                refIdList.getRef().add(izvestaj.getIzvestajBody().getId());
            }

            return refIdList;
        } catch (Exception ex) {
            RefIdList refIdList = new RefIdList();
            refIdList.getRef().add("-1");
            return refIdList;
        }
    }



}
