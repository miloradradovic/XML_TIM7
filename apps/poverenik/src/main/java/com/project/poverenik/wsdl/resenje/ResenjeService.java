package com.project.poverenik.wsdl.resenje;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import java.net.URL;

/**
 * This class was generated by Apache CXF 3.2.1
 * 2021-01-27T22:45:27.308+01:00
 * Generated source version: 3.2.1
 */
@WebServiceClient(name = "ResenjeService",
        wsdlLocation = "classpath:wsdl/Resenje.wsdl",
        targetNamespace = "http://resenje")
public class ResenjeService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://resenje", "ResenjeService");
    public final static QName ResenjeServiceSoapBinding = new QName("http://resenje", "ResenjeServiceSoapBinding");

    static {
        URL url = ResenjeService.class.getClassLoader().getResource("wsdl/Resenje.wsdl");
        if (url == null) {
            java.util.logging.Logger.getLogger(ResenjeService.class.getName())
                    .log(java.util.logging.Level.INFO,
                            "Can not initialize the default wsdl from {0}", "classpath:wsdl/Resenje.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public ResenjeService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public ResenjeService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ResenjeService() {
        super(WSDL_LOCATION, SERVICE);
    }

    public ResenjeService(WebServiceFeature... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public ResenjeService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public ResenjeService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }


    /**
     * @return returns ResenjeServicePortType
     */
    @WebEndpoint(name = "ResenjeServiceSoapBinding")
    public ResenjeServicePortType getResenjeServiceSoapBinding() {
        return super.getPort(ResenjeServiceSoapBinding, ResenjeServicePortType.class);
    }

    /**
     * @param features A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return returns ResenjeServicePortType
     */
    @WebEndpoint(name = "ResenjeServiceSoapBinding")
    public ResenjeServicePortType getResenjeServiceSoapBinding(WebServiceFeature... features) {
        return super.getPort(ResenjeServiceSoapBinding, ResenjeServicePortType.class, features);
    }

}
